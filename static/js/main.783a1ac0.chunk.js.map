{"version":3,"sources":["utils/API.js","context.js","components/MusicPlayer/MusicPlayer.js","components/Buttons/LoadMusicButton.js","components/Navbar/NavbarComponent.js","App.js","index.js","components/MusicPlayer/captions.vtt"],"names":["lyricEndpoint","musixMatchLyrics","artist","trackName","a","trim","split","track","artistSearch","i","length","push","join","axios","get","process","response","console","log","data","lyrics_body","message","body","lyrics","AppContext","createContext","AppContextProvider","props","useState","musicModal","setMusicModal","songLyrics","setSongLyrics","captionSource","setCaptionSource","navisOpen","setNavIsOpen","displaySongLyrics","setDisplaySongLyrics","title","src","isChecked","songData","setSongData","song","artistLyrics","Provider","value","toggleNavbar","toggleMusicModal","handleLyricChange","e","target","handleChange","url","name","checked","type","prevState","blob","Blob","URL","revokeObjectURL","createObjectURL","searchTrack","searchLyrics","children","MusicPlayer","useContext","kind","caption","srcLang","label","default","position","autoHide","seconds","order","LoadMusicButton","Button","outline","color","onClick","Modal","isOpen","ModalHeader","toggle","ModalBody","Form","FormGroup","Label","for","Input","id","placeholder","onChange","FormText","ModalFooter","NavbarComponent","Navbar","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","className","NavItem","NavLink","App","rootElement","document","getElementById","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.783a1ac0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst lyricEndpoint = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/matcher.lyrics.get?q_track=`\n\nexport async function musixMatchLyrics(artist, trackName) {\n    trackName = trackName.trim().split(\" \")\n    artist = artist.trim().split(\" \")\n    let track = []\n    let artistSearch = [];\n\n    for (let i = 0; i < trackName.length - 1; i++) {\n        track.push(trackName[i] + \"%20\")\n    }\n    track.push(trackName[trackName.length - 1])\n    track = track.join(\"\")\n\n    for (let i = 0; i < artist.length - 1; i++) {\n        artistSearch.push(artist[i] + \"%20\")\n    }\n    artistSearch.push(artist[artist.length - 1])\n    artistSearch = artistSearch.join(\"\")\n\n\n    let response = await axios.get(`${lyricEndpoint}${track}&q_artist=${artistSearch}&f_has_lyrics&apikey=${process.env.REACT_APP_MM_KEY}`)\n    console.log('response', response.data)\n    const { lyrics_body } = response.data.message.body.lyrics\n    return lyrics_body;\n};\n\n\nexport async function musixMatchAlbumArt(artist, trackName) {\n\n};\n\n","import React, { useState, createContext } from \"react\";\r\nimport { musixMatchLyrics } from './utils/API';\r\nconst AppContext = createContext();\r\n\r\nfunction AppContextProvider(props) {\r\n  const [musicModal, setMusicModal] = useState(false);\r\n  const [songLyrics, setSongLyrics] = useState();\r\n  const [captionSource, setCaptionSource] = useState();\r\n  const [navisOpen, setNavIsOpen] = useState(false);\r\n  // This piece of state is for the musixMatch api\r\n  const [displaySongLyrics, setDisplaySongLyrics] = useState()\r\n  const [songData, setSongData] = useState({\r\n    title: \"\",\r\n    artist: \"\",\r\n    src: \"\",\r\n    lyrics: \"\",\r\n    isChecked: false\r\n  });\r\n\r\n  function toggleNavbar() {\r\n    setNavIsOpen(!navisOpen);\r\n\r\n  }\r\n\r\n  function searchTrack() {\r\n    console.log('searchTrack', songData);\r\n    setMusicModal(!musicModal);\r\n\r\n    searchLyrics()\r\n  }\r\n\r\n  async function searchLyrics() {\r\n    if (songData.isChecked && songData.song !== \"\") {\r\n      const artistLyrics = await musixMatchLyrics(songData.artist, songData.title)\r\n      setDisplaySongLyrics(artistLyrics)\r\n    } else setDisplaySongLyrics(\"No Results found\")\r\n  }\r\n\r\n  function handleChange(e) {\r\n    let url;\r\n    const { name, value, checked, type } = e.target;\r\n    if (type === \"checkbox\") {\r\n      setSongData(prevState => ({\r\n        ...prevState,\r\n        [name]: checked\r\n      }))\r\n    }\r\n    else if (type === \"textarea\") {\r\n      let blob = new Blob(\r\n        [value],\r\n        {\r\n          type: 'text/vtt;charset=utf-8'\r\n        }\r\n      )\r\n\r\n      if (url) {\r\n        URL.revokeObjectURL(url);\r\n      }\r\n      url = URL.createObjectURL(blob)\r\n\r\n      setCaptionSource(url)\r\n      setSongData(prevState => ({\r\n        ...prevState,\r\n        [name]: value\r\n      }));\r\n    }\r\n\r\n    else {\r\n      setSongData(prevState => ({\r\n        ...prevState,\r\n        [name]: value\r\n      }));\r\n\r\n    }\r\n\r\n  }\r\n\r\n  function handleLyricChange(e) {\r\n    const { value } = e.target;\r\n    setSongLyrics(value);\r\n    console.log(songLyrics);\r\n  }\r\n\r\n  function toggleMusicModal() {\r\n    setMusicModal(!musicModal);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppContext.Provider\r\n        value={{\r\n          musicModal,\r\n          displaySongLyrics,\r\n          songData,\r\n          captionSource,\r\n          navisOpen,\r\n          setCaptionSource,\r\n          toggleNavbar,\r\n          toggleMusicModal,\r\n          setSongLyrics,\r\n          handleLyricChange,\r\n          handleChange,\r\n          searchTrack,\r\n        }}\r\n      >\r\n        {props.children}\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { AppContextProvider, AppContext };\r\n","import React, { useContext } from 'react';\nimport { Player, ControlBar, ReplayControl, ForwardControl, ClosedCaptionButton, BigPlayButton } from 'video-react';\nimport caption from './captions.vtt';\n\nimport { AppContext } from '../../context';\n\n\nfunction MusicPlayer() {\n\n    const { songData, captionSource } = useContext(AppContext)\n\n    return (\n        <div >\n            <Player\n                src={!songData.src ? \"http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3\" : songData.src}>\n                <track\n                    kind=\"captions\"\n                    src={!captionSource ? caption : captionSource}\n                    srcLang=\"en\"\n                    label=\"English\"\n                    default />\n                <BigPlayButton position=\"center\" />\n                <ControlBar autoHide={true}>\n                    <ReplayControl seconds={5} order={2.1} />\n                    <ForwardControl seconds={5} order={3.1} />\n                    <ClosedCaptionButton order={7} />\n                </ControlBar>\n            </Player>\n\n\n        </div >\n    )\n};\n\n\n\nexport default MusicPlayer\n\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../context\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n} from \"reactstrap\";\r\n\r\nfunction LoadMusicButton() {\r\n  const {\r\n    musicModal,\r\n    toggleMusicModal,\r\n    songData,\r\n    handleChange,\r\n    searchTrack\r\n  } = useContext(AppContext);\r\n\r\n  return (\r\n    <div>\r\n      <Button outline color=\"warning\" onClick={toggleMusicModal}>\r\n        Load Music\r\n      </Button>\r\n      <Modal isOpen={musicModal}>\r\n        <ModalHeader toggle={toggleMusicModal}>Add a song</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label for=\"songTitle\">Song Title</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                id=\"songTitle\"\r\n                placeholder=\"Title\"\r\n                value={songData.title}\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"artist\">Artist</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"artist\"\r\n                id=\"artist\"\r\n                placeholder=\"Artist\"\r\n                value={songData.artist}\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"linkToSong\">Link to Song</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"src\"\r\n                placeholder=\"www.location.com\"\r\n                value={songData.src}\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"lyrics\">WebVtt format lyrics</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"lyrics\"\r\n                placeholder=\"Baby Got back\"\r\n                value={songData.lyrics}\r\n                onChange={handleChange}\r\n              />\r\n              <FormText color=\"muted\">\r\n\r\n                <h6>\r\n                  Enter in Lyrics in this format to have lyrics and music sync:{\" \"}\r\n                  <br></br>\r\n                  <br></br>\r\n                  <p>WEBVTT</p>\r\n                </h6>\r\n                <p>00:01.000 &#45;&#45;&#62; 00:05.000 line:50%<br />Baby come back, any type of fool could see\r\n                </p>\r\n\r\n                <p>00:07.000 &#45;&#45;&#62; 00:16.000 line:50% <br />There was something in everything about you\r\n                </p>\r\n\r\n\r\n              </FormText>\r\n\r\n            </FormGroup>\r\n\r\n\r\n            {/* <FormGroup check>\r\n              <Label check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  name=\"isChecked\"\r\n                  onChange={handleChange}\r\n                  checked={songData.isChecked}\r\n                />\r\n                Auto Load partial lyrics\r\n              </Label>\r\n            </FormGroup> */}\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"warning\" onClick={searchTrack}>\r\n            Submit\r\n          </Button>{\" \"}\r\n          <Button color=\"danger\" onClick={toggleMusicModal}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default LoadMusicButton;\r\n","import React, { useContext } from 'react';\nimport LoadMusicButton from '../Buttons/LoadMusicButton'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n\n} from 'reactstrap';\nimport { AppContext } from '../../context';\n\nfunction NavbarComponent() {\n    const { navisOpen, toggleNavbar } = useContext(AppContext);\n\n    return (\n        <div>\n            <Navbar color=\"faded\" expand=\"md\">\n                <NavbarBrand href=\"https://suarez9093.github.io/music-player/\">Ill-Lyrical</NavbarBrand>\n                <NavbarToggler onClick={toggleNavbar} />\n                <Collapse isOpen={navisOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink href=\"https://github.com/suarez9093/music-player\">GitHub</NavLink>\n                        </NavItem>\n                    </Nav>\n                    <LoadMusicButton />\n                </Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default NavbarComponent;","import React from \"react\";\nimport MusicPlayer from './components/MusicPlayer/MusicPlayer';\nimport NavbarComponent from './components/Navbar/NavbarComponent'\n\nfunction App() {\n  return (\n    <>\n      <NavbarComponent />\n      <div className=\"app-grid-container\">\n\n        <div className=\"music-player\">\n\n          <MusicPlayer />\n        </div>\n\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css'\n\nimport { AppContextProvider } from \"./context\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <AppContextProvider>\n    <App />\n  </AppContextProvider>,\n  rootElement\n);\n","module.exports = __webpack_public_path__ + \"static/media/captions.343ae23a.vtt\";"],"sourceRoot":""}